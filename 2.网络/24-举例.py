import os,sys 
parentdir = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) 
sys.path.insert(0,parentdir) 

import xmind
from xmind.core.markerref import MarkerId
xmind_name="internet"
w = xmind.load(os.path.dirname(os.path.abspath(__file__))+"\\"+xmind_name+".xmind") 
s2=w.createSheet()
s2.setTitle("举例")
r2=s2.getRootTopic()
r2.setTitle("举例")


content={
'电脑视角':[
    '1.知道我的 IP 以及对方的 IP',
    '2.通过子网掩码判断我们是否在同一个子网',
    '3.在同一个子网就通过 arp 获取对方 mac 地址直接扔出去',
    '4.不在同一个子网就通过 arp 获取默认网关的 mac 地址直接扔出去'
],
'交换机视角':[
    '1.收到的数据包必须有【目标MAC地址】',
    '2.通过 MAC 地址表查映射关系',
    '3.查到了就按照映射关系从我的指定端口发出去',
    '4.查不到就所有端口都发出去'
],
'路由器视角':[
    '1.收到的数据包必须有【目标IP地址】',
    '2.通过路由表查映射关系',
    '3.查到了就按照映射关系从我的指定端口发出去（不在任何一个子网范围，走其路由器的默认网关也是查到了）',
    '4.查不到则返回一个路由不可达的数据包'
],
'总结':[
    '网络层（IP协议）本身没有传输包的功能，包的实际传输是委托给数据链路层（以太网中的交换机）来实现的'
],
'A（192.168.0.1）':[
    '1.通过子网掩码（255.255.255.0）计算出自己与 F（192.168.2.2）并不在同一个子网内，于是决定发送给默认网关（192.168.0.254）',
    '2.通过 ARP 找到 默认网关 192.168.0.254 的 MAC 地址',
    '3.将源 MAC 地址（AAAA）与网关 MAC 地址（ABAB）封装在数据链路层头部,将源IP地址（192.168.0.1）和目的IP地址（192.168.2.2）封装在网络层头部,然后发包',
    '注:从始至终数据包的两个 IP 地址都是不变的,只有 MAC 地址在不断变化',
],
'交换机 1':[
    '4.收到数据包后,发现目标 MAC 地址是 ABAB，转发给路由器1'
],
'路由器 1':[
    '5.发现其目标 IP 地址是 192.168.2.2,查看其路由表,发现了下一跳的地址是 192.168.100.5',
    '6.再次匹配路由表,发现匹配到了端口为 2,于是将其封装到数据链路层，最后把包从 2 号口发出去'
],
'路由器 2':[
    '7.收到了数据包v看到其目的地址是 192.168.2.2,查询其路由表,匹配到端口号为 1,准备从 1 号口把数据包送出去',
    '8.查看其 arp 缓存,查询目标IP 192.168.2.2 对映的MAC地址为 FFFF,将其封装在数据链路层头部,并从 1 号端口把包发出去'
],
'交换机 3':[
    '9.收到数据包,发现目的 MAC 地址为 FFFF,查询其 MAC 地址表,发现应该从其 6 号端口出去,于是从 6 号端口把数据包发出去'
],
'F':[
    '10.收到了数据包,并且发现目的 MAC 地址就是自己,于是收下了这个包'
]




}


#构建xmind
xmind.build(content,r2)
#保存xmind
xmind.save(w,os.path.dirname(os.path.abspath(__file__))+"\\"+xmind_name+".xmind") 