import os,sys 
parentdir = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) 
sys.path.insert(0,parentdir) 

import xmind
from xmind.core.markerref import MarkerId
xmind_name="internet"
w = xmind.load(os.path.dirname(os.path.abspath(__file__))+"\\"+xmind_name+".xmind") 
s2=w.createSheet()
s2.setTitle("链路层")
r2=s2.getRootTopic()
r2.setTitle("链路层")


content={
'作用':[
    '对电信号进行分组并形成具有特定意义的数据帧，然后以广播形式通过物理介质发送给接收方'
],
'使用协议':[
    '以太网协议:对电信号进行分组形成数据帧，然后通过物理介质把数据帧发送给接收方',
],
'以太网数据包':[
    '首部:14字节，包含目标MAC地址、源MAC地址和类型',
    '数据:最短为46个字节，最长为1500个字节',
    '尾部:4字节，表示数据帧校验序列，用于确定数据包在传输过程中是否损坏',
    {'注':[
        '一个数据包称为一帧',
        'MTU：一个网络包的最大长度，以太网中一般为1500字节',
        'MSS：除去头部后，一个网络包所能容纳的TCP数据的最大长度',
    ]}
],
'网卡驱动':[
    '从IP模块获取包，将其复制到网卡内的缓冲区',
    '向MAC模块发送发送包的命令'
],
'网卡':[
    '网络适配器，接入网络的设备都必须安装的',
    '数据包必须是从一块网卡传送到另一块网卡',
    {'网卡地址':[
        '帧首部所包含的MAC地址',
        '网卡的ROM中保存着全世界唯一的MAC地址（生产网卡时写入）'
    ]},
    {'发送数据形式':[
        '广播',
        '把数据包发给子网内所有主机，每台主机读取首部里的目标MAC地址和自己的对比，如相同就做下一步处理，如不同，丢弃包'
    ]},
    {'MAC模块':[
        '网卡中保存的MAC地址会由网卡驱动程序读取并分配给MAC模块',
        '将包从缓冲区中取出，生成通用信号',
        '在开头加上报头和起始帧分界符，末尾加上帧校验序列',
        '报头：一段测量时钟信号的特殊信号',
        '起始帧分界符:一个表示包起始位置的标记',
        '帧校验序列:用来检查包传输过程中因噪声导致的波形紊乱、数据错误',
    ]},
    {'PHY（MAU）模块':[
        '信号转换成可在网线中传输的格式，并通过网线发送出去'
    ]}
],
'包收发操作':[
    {'TCP模块':[
        '在数据块前加上TCP头部，然后整包传递给IP模块'
    ]},
    {'IP模块':[
        '在包前加上IP头部和MAC头部，封装好包交给网卡'
    ]},
    {'网卡':[
        '将数字信息->电信号或光信号，并通过网线（或光纤）发送出去'
    ]},
    {'介质':[
        '1.发送者发出的消息->子网中的集线器->距离发送者最近的路由器',
        '2.路由器根据消息的目的地判断下一个路由器位置，将消息发送到下一个路由器(委托集线器)',
        '3.前面过程不断重复，最终消息就被传送到目的地'
    ]},
    {'路由器':[
        '使用IP头部，按照【IP规则】传输包的设备',
        'IP协议的表：根据IP头部的目的地信息查出接下来应该发往哪个路由器',
        'IP协议：根据目标地址->下一路由器的MAC地址->委托以太网协议将包传输'
    ]},
    {'集线器':[
        '使用MAC头部，按照【以太网规则】传输包的设备',
        '以太网表：以太网头部中的目的地信息查出相应的传输方向',
        '以太网协议:根据MAC地址->下一个转发设备'
    ]}
]
}


#构建xmind
xmind.build(content,r2)
#保存xmind
xmind.save(w,os.path.dirname(os.path.abspath(__file__))+"\\"+xmind_name+".xmind") 