import os,sys 
parentdir = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) 
sys.path.insert(0,parentdir) 

import xmind
xmind_name="操作系统"
w = xmind.load(os.path.dirname(os.path.abspath(__file__))+"\\"+xmind_name+".xmind") 
s2=w.createSheet()
s2.setTitle("计算机组成")
r2=s2.getRootTopic()
r2.setTitle("计算机组成")


content={
'操作系统提供了几种抽象模型':[
    '文件：对 I/O 设备的抽象',
    '虚拟内存：对程序存储器的抽象',
    '进程：对一个正在运行程序的抽象',
    '虚拟机：对整个操作系统的抽象'
],
'计算机系统组成':[
    '硬件：芯片、电路板、磁盘、键盘、显示器',
    '操作系统:为用户层和硬件提供各自的接口，屏蔽了不同应用和硬件之间的差异，达到统一标准的作用',
    '软件'
],
'计算机的两种运行模式':[
    {'内核态':[
        '操作系统具有硬件的访问权，可以执行机器能够运行的任何指令',
        '软件中最基础的部分是操作系统，运行在内核态中'
    ]},
    {'用户态':[
        '软件的其余部分运行在用户态下'
    ]}
],
'计算机硬件5 个重要的组成部分':[
    {'运算器':[
        '功能:对数据和信息进行加工和运算'
        '组成：算数逻辑单元+寄存器',
        '基本运算包括加、减、乘、除、移位等操作'
    ]},
    {'控制器':[
        '功能：按照指定顺序改变主电路或控制电路的部件，控制命令执行',
        '组成：程序计数器、指令寄存器、解码译码器'
        '',
    ]},
    '运算器和控制器共同组成了 CPU',
    {'存储器':[
        '保存信息',
        {'两种':[
            '主存，也就是内存，它是 CPU 主要交互对象',
            '外存，比如硬盘软盘'
        ]}
    ]},
    {'输入设备':[
        '给计算机获取外部信息的设备',
        '组成：键盘和鼠标'
    ]},
    {'输出设备':[
        '给用户呈现根据输入设备获取的信息经过一系列的计算后得到显示的设备',
        '组成：显示器、打印机'
    ]},
    {'总线(Buses)':[
        '在组件之间来回传输字节信息,通常被设计成传送定长(4或8字节)的字节块'
    ]},
    {'I/O 设备':[
        '系统和外部世界的连接',
        {'四类':[
            '用于用户输入的键盘',
            '用于用户输入的鼠标',
            '用于用户输出的显示器',
            '磁盘驱动:用来长时间的保存数据和程序,刚开始的时候，可执行程序就保存在磁盘上',
        ]}
    ]},
    {'控制器(controller) 或适配器(Adapter)':[
        'I/O 设备连接I/O 总线'
    ]},
    {'主存(Main Memory)':[
        '一个临时存储设备',
        '从物理组成上说，主存是由一系列 DRAM(dynamic random access memory) 动态随机存储构成的集合',
        '逻辑上说，内存就是一个线性的字节数组，有它唯一的地址编号，从 0 开始'
    ]},
    {'处理器(Processor)/CPU(central processing unit)':[
        '解释（并执行）存储在主存储器中的指令的引擎'
    ]}
]
}

#构建xmind
xmind.build(content,r2)
#保存xmind
xmind.save(w,os.path.dirname(os.path.abspath(__file__))+"\\"+xmind_name+".xmind") 